syntax = "proto3";

// where to write our package.
option go_package = "github.com/ezratameno/blocker/proto";

// message - define a type.

message Block {
  Header header = 1;

  // repeated - slice
  repeated Transaction transactions = 2;
}

message Header {
  // version - the version of the serialization protocol.
  // basically the structure of our block, importent for backward compatibility.
  int32 version = 1;

  // height - index of the block.
  int32 height = 2;

  // we have hashes and we will link them together.
  bytes prevHash = 3;

  //  Merkel root of the transaction.
  bytes rootHash = 4;

  //   Timestamp of when the block was created.
  int64 timestamp = 5;
}

// A transaction where we recived coins, like from where do we have some change that we want to use
// to send to someone.
message TxInput {
  // The previous hash of the transaction containing
  // the output we want to spend.
  bytes prevTxHash = 1;

  // The index of the output of the previous transaction we
  // want to spend.
  uint32 prevOutIndex = 2;

  // public key created base on the private key.
  bytes PubicKey = 3;

  // signature based on the private key.
  bytes signature = 4;
}

message TxOutput {
  // amount to send.
  int64 amount = 1;

  // where to send.
  bytes address = 2;
}

// Transaction includes an input and an output.
// One user send another some coins, the number sent and recevied must be the same.
message Transaction {
  // version used for compability, so people will know how to decode/encode the transaction.
  int32 version = 1;

  // from which transaction we have coins we want to send.
  repeated TxInput inputs = 2;

  // The destaintion of the coins we want to spend.
  repeated TxOutput outputs = 3;
}
